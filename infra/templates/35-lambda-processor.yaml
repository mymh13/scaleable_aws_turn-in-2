AWSTemplateFormatVersion: '2010-09-09'
Description: Lambda function for timestamp acknowledgments (basic version)

Parameters:
  StackNamePrefix:
    Type: String
  TableName:
    Type: String

Resources:
  TimestampProcessorRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${StackNamePrefix}-lambda-timestamp-processor'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:UpdateItem
                  - dynamodb:GetItem
                Resource: !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TableName}'

  TimestampProcessor:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub '${StackNamePrefix}-timestamp-processor'
      Runtime: python3.9
      Handler: index.lambda_handler
      Role: !GetAtt TimestampProcessorRole.Arn
      Code:
        ZipFile: |
          import json
          
          def lambda_handler(event, context):
              print(f"Lambda function executed! Event: {json.dumps(event)}")
              return {'statusCode': 200, 'body': json.dumps('Hello from Lambda!')}

Outputs:
  LambdaFunctionArn:
    Value: !GetAtt TimestampProcessor.Arn
    Description: ARN of the timestamp processor Lambda function